#!/bin/bash
#########################################################################################################################
#########################################################################################################################
# Default paths
BUILD_DIR="${HOME}/Advanced_kernel_builder_script"
MISC_DIR="${HOME}/lineage"
OUT="$BUILD_DIR/.out"
AnyKernel2="$BUILD_DIR/AnyKernel2"
AnyKernel2_TMP="$BUILD_DIR/.AnyKernel2"

# Kernel source git link
KSOURCE_GIT="https://github.com/OrdenKrieger/android_kernel_zte_msm8996.git -b radioactive"

# Kernel
VER="V1.1.5_axon7"
BASE_VER="Radioactive"
KERNEL_DIR="$MISC_DIR/kernel/zte/msm8996"
KERNEL_IMAGE_DIR="$OUT/arch/arm64/boot" # Only change on soc/arch change ->arm64-arm etc.
KERNEL_ARCH="arm64"
KERNEL_DEFCONFIG="lineageos_axon7_defconfig"
TOOLCHAIN_DIR="$MISC_DIR/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/bin/aarch64-linux-android-"

# Name of kernel image output (e.g. Image.gz-dtb, zImage)
KERNEL_IMAGE="Image.gz-dtb"

# Zip output
ZIP_MOVE="$BUILD_DIR/releases"

#########################################################################################################################
#########################################################################################################################
# AnyKernel2 props
AK_KERNEL_STRING="$BASE_VER-$VER"

# AK_DEVICECHECK=1
# Specified requires at least device.name1 to be present
# This should match ro.product.device or ro.build.product for your device
# There is support for up to 5 device.name# properties
AK_DEVICECHECK="0"
AK_NAME1=""
AK_NAME2=""
AK_NAME3=""
AK_NAME4=""
AK_NAME5=""

# AK_MODULES=1
# Will push the contents of the module directory to the same location relative to root (/) and apply 644 permissions
AK_MODULES="0"

# AK_CLEANUP=0
# Will keep the zip from removing it's working directory in /tmp/anykernel
# This can be useful if trying to debug in adb shell whether the patches worked correctly
AK_CLEANUP="1"

# AK_CLEANUPONABORT=0
# Will keep the zip from removing it's working directory in /tmp/anykernel in case of installation abort.
AK_CLEANUPONABORT="1"

# AK_BLOCK=auto
# Instead of a direct block filepath enables detection of the device boot partition for use with broad, device non-specific zips
# Also accepts specifically boot or recovery
AK_BLOCK="auto"

# AK_IS_SLOT_DEVICE=1
# Enables detection of the suffix for the active boot partition on slot-based devices and will add this to the end of the supplied block= path
# Also accepts auto for use with broad, device non-specific zips
AK_IS_SLOT_DEVICE="0"

# AK_RAMDISK_COMPRESSION=auto
# Allows automatically repacking the ramdisk with the format detected during unpack, changing auto to gz, lzo, lzma, xz, bz2, lz4, or lz4-l (for lz4 legacy) instead forces the repack as that format
AK_RAMDISK_COMPRESSION="auto"

#########################################################################################################################
#########################################################################################################################
# AKBS headline
HEADLINE_TXT="Advanced kernel builder script by OrdenKrieger"

# Enable/Disable output folder cleanup dialog
OUTPUT_EMPTY_CHECK="1"

# Enable/Disable colors for the build
COLOR_TXT="1"

# Enable/Disable clear kernel build history (ONLY ON SUCCESS; on error not for debug)
CLEAR_ON_SUCCESS="1"

# Enable/Disable clean up of build folders
OUTPUT_CLEAN_UP="1"

#########################################################################################################################
#########################################################################################################################
